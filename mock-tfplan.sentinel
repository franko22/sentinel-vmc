import "strings"
import "types"

_modules = {
	"root": {
		"data":      {},
		"path":      [],
		"resources": {},
	},
}

module_paths = [
	[],
]

terraform_version = "0.13.3"

variables = {
	"host_instance_type": "I3_METAL",
	"org_id":             "b7793958-b6b6-4916-a008-40c5c47ec24c",
	"refresh_token":      "67fQR762bPwPPQgmkR8CBX7gvRYPgGvpzSpJeksI5trpmmTLDP8MA2WdHuBF1df3",
	"region":             "eu-west-2",
	"sddc_name":          "VMCandTFC",
	"sddc_num_hosts":     1,
	"sso_domain":         "vmc.local",
	"vmc_vpc_cidr":       "10.2.0.0/16",
	"vxlan_subnet":       "10.10.10.0/23",
}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
